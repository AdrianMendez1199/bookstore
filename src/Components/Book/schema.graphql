
 type Query {
    book(id: ID): [Book!]!
 } 
 
 type Book {
     id: ID!
     title: String!
     description: String!
     quantity: Int!
     price: Float!
     writted_by: Author!
     register_by: User!
 }


input createBookInput {
     title: String!
     description: String
     quantity: Int!
     price: Float!
     writted_by: ID!
     register_by: ID!
}


input updateBookInput {
      title: String
      description: String
      quantity: Int
      price: Float
      writted_by: ID
      register_by: ID
}

type Mutation {
    createBook(data: createBookInput): Book!
    updateBook(id: ID! data: updateBookInput): Book!
    deleteBook(id: ID!): Book!
}


type Subscription {
  book(authorId: ID!): BookSuscriptionPayload!
}


type BookSuscriptionPayload {
    mutation: MutationType!
    data: Book!
}


